<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<project name="atunes" basedir=".">

	<property name="deploy_folder" value="${basedir}/target/aTunes" />
	<property name="build_resources" value="${basedir}/build_resources" />
	<property name="target" value="${basedir}/target" />
	<property name="build_tools" location="${basedir}/build_tools" />
	<property name="lib_build" location="${build_tools}/lib" />
	<property name="lib" location="${basedir}/lib" />
	<property name="launch4j.dir" location="${lib_build}/launch4j" />
	<property name="win_tools" location="${basedir}/win_tools" />
	<property name="translations" location="${basedir}/src/main/resources/translations" />
	<property name="settings" location="${basedir}/src/main/resources/settings" />
	<property name="images" location="${basedir}/src/main/resources/images" />
	<property name="src" location="${basedir}/src/main/java" />
	<property name="debug_folder" value="${basedir}/debug" />

	<!-- Allows us to use the IzPack Ant task -->
	<taskdef name="izpack" classpath="${lib_build}/standalone-compiler.jar" classname="com.izforge.izpack.ant.IzPackTask" />
	
	<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${lib_build}/launch4j/launch4j.jar:${lib_build}/launch4j/xstream.jar" />
	<taskdef name="launch4j_mac" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${lib_build}/launch4j_macosx/launch4j.jar:${lib_build}/launch4j_macosx/xstream.jar" />
	
	<!-- Creates a Linux desktop entry-->
	<taskdef name="desktopEntry" classpath="${lib_build}/ant-deb.jar" classname="com.googlecode.ant_deb_task.DesktopEntry" />
	<!-- Creates an deb package-->
	<taskdef name="deb" classpath="${lib_build}/ant-deb.jar" classname="com.googlecode.ant_deb_task.Deb" />
	
	<!-- SCP -->
	<taskdef name="scp" classpath="${scp_classpath}" classname="org.apache.tools.ant.taskdefs.optional.ssh.Scp" />

	<condition property="isMac">
	      <os family="mac" />
	</condition>

	<condition property="isLinux">
	      <os family="unix" />
	</condition>
	
	<condition property="do_upload">
		<not>
			<!-- When property is not set it's equal to property name with {} -->
			<equals arg1="${user}" arg2="{user}"/>
		</not>
	</condition>

	<!-- Removes configuration, temporary and cache files -->
	<target name="clean">
		<delete dir="${debug_folder}" />
	</target>

	
	<!-- Creates the exe file for Windows -->
	<target name="create_aTunes.exe" depends="prepare">
		<antcall target="create_aTunes.exe_not_mac"/>
		<antcall target="create_aTunes.exe_mac"/>
	</target>

	<target name="create_aTunes.exe_mac" if="isMac">
		<launch4j_mac configFile="${build_tools}/launch4j.xml" outfile="${deploy_folder}/aTunes.exe" />
	</target>

	<target name="create_aTunes.exe_not_mac" unless="isMac">
		<launch4j configFile="${build_tools}/launch4j.xml" outfile="${deploy_folder}/aTunes.exe" />
	</target>

	

	<!-- Prepares the directory structure -->
	<target name="prepare">

		<mkdir dir="${deploy_folder}" />

		<copy todir="${deploy_folder}">
			<fileset dir="${target}" includes="aTunes.jar" />
		</copy>

		<copy todir="${deploy_folder}">
			<fileset dir="${build_resources}" includes="*" />
		</copy>

		<copy todir="${deploy_folder}/settings">
			<fileset dir="${settings}" includes="*" />
		</copy>

		<copy todir="${deploy_folder}/build_tools">
			<fileset dir="${build_tools}" includes="*" />
		</copy>

		<copy todir="${deploy_folder}" file="docs/changelog.txt" />

		<mkdir dir="${deploy_folder}/translations" />
		<copy todir="${deploy_folder}/translations">
			<fileset dir="${translations}" includes="*" />
		</copy>

		<mkdir dir="${deploy_folder}/win_tools" />
		<copy todir="${deploy_folder}/win_tools">
			<fileset dir="${win_tools}" includes="**/" />
		</copy>
		<mkdir dir="${deploy_folder}/mac_tools" />

		<mkdir dir="${deploy_folder}/src" />
		<copy todir="${deploy_folder}/src">
			<fileset dir="${src}" excludes="*/*.class" />
		</copy>
		<mkdir dir="${deploy_folder}/temp" />
		<mkdir dir="${deploy_folder}/javadoc" />

		<copy todir="${deploy_folder}/temp">
			<fileset dir="${images}" includes="*.*" />
		</copy>

		<copy todir="${deploy_folder}/temp">
			<fileset dir="${images}/windows" includes="*.*" />
		</copy>

		<delete dir="${deploy_folder}/temp" />

		<copy todir="${deploy_folder}" file="${build_tools}/shortcutSpec.xml" />
		
		<copy todir="${deploy_folder}" file="${build_tools}/AntActionsSpec.xml" />		
		<copy todir="${deploy_folder}" file="${build_tools}/lib/ant.jar" />
		<copy todir="${deploy_folder}" file="${build_tools}/lib/ant-launcher.jar" />
		<copy todir="${deploy_folder}" file="${build_tools}/clean_lib.xml" />
	</target>



	<!-- Creates a standard .jar installer -->
	<target name="create_installer" depends="prepare, create_aTunes.exe">
		<!-- We call IzPack -->
		<echo message="Makes the installer using IzPack" />
		<izpack input="${build_tools}/izPack_build.xml" output="${target}/aTunes_${version}_installer.jar" installerType="standard" basedir="${deploy_folder}" />

		<antcall target="create_installer_not_mac"/>
		<antcall target="create_installer_mac"/>
	</target>

	<target name="create_installer_not_mac" unless="isMac">
		<launch4j configFile="${build_tools}/launch4j_installer.xml" jar="${target}/aTunes_${version}_installer.jar" outfile="${target}/aTunes_${version}_installer.exe" />
	</target>

	<target name="create_installer_mac" if="isMac">
		<launch4j_mac configFile="${build_tools}/launch4j_installer.xml" jar="${target}/aTunes_${version}_installer.jar" outfile="${target}/aTunes_${version}_installer.exe" />
	</target>

	
	<!-- Creates a Ubuntu/Debian package -->
	<target name="create_deb" depends="prepare">

		<desktopEntry toFile="${deploy_folder}/atunes.desktop" name="aTunes" icon="atunes" exec="atunes" categories="Audio;AudioVideo;" type="Application">
			<name lang="de" value="aTunes" />
			<genericName value="Audio Player" />
			<genericName lang="de" value="Audioplayer" />
			<comment value="aTunes is a full-featured audio player and organizer" />
			<comment lang="de" value="aTunes ist ein vollwertiger Audioplayer und -manager" />
		</desktopEntry>


		<deb todir="${target}" package="atunes" section="sound" depends="libxine1-plugins|mplayer|vlc,sun-java6-jre|sun-java6-jdk|openjdk-6-jre|openjdk-6-jdk" recommends="cdda2wav,vorbis-tools,flac" suggests="icedax,lame,faac">

			<version upstream="${version}" />
			<maintainer name="aTunes team" email="atunes-packages@lists.sourceforge.net" />
			<description synopsis="Audio Player">aTunes is a full-featured audio player and organizer. aTunes supports mp3, ogg, wma, wav, flac and mp4 files and allows users to edit tags, organize music and rip audio cds easily.</description>

			<tarfileset dir="${deploy_folder}" prefix="usr/share/atunes" username="root" group="root" filemode="755">
				<include name="**/*.sh" />
			</tarfileset>
			<tarfileset dir="${deploy_folder}" prefix="usr/share/atunes" username="root" group="root">
				<exclude name="**/temp/**" />
				<exclude name="**/aTunes.sh" />
				<exclude name="**/atunes.desktop" />
				<exclude name="**/win_tools/**" />
				<exclude name="**/mac_tools/**" />
				<exclude name="**/javadoc/**" />
				<exclude name="**/src/**" />
				<exclude name="**/*.dll" />
				<exclude name="**/*.exe" />
				<exclude name="**/*.command" />
				<exclude name="**/*.ico" />
				<exclude name="**/*.icns" />
				<exclude name="**/atunes.png" />
				<exclude name="**/shortcutSpec.xml" />
				<exclude name="**/settings/**" />
				<exclude name="**/translations/**" />
				<exclude name="**/build_tools/**" />
				<exclude name="**/atunes" />
			</tarfileset>
			<tarfileset dir="${build_resources}" prefix="usr/share/pixmaps" username="root" group="root">
				<include name="**/atunes.png" />
			</tarfileset>
			<tarfileset dir="${build_resources}" prefix="usr/bin" username="root" group="root" filemode="755">
				<include name="atunes" />
			</tarfileset>
			<tarfileset dir="${deploy_folder}" prefix="usr/share/applications" username="root" group="root">
				<include name="atunes.desktop" />
			</tarfileset>
		</deb>
	</target>
	
	<!-- Copy splash image to folder where Mac OS package is created, since Maven plugin does not allow to do this -->
	<!-- Also copy volume icon -->
	<target name="copy_splash">
		<copy todir="${basedir}/target/atunes-${version}/aTunes.app/Contents/Resources" file="${build_resources}/splash.gif" />	
		<copy tofile="${basedir}/target/atunes-${version}/.VolumeIcon.icns" file="${build_resources}/macos/aTunes_dmg.icns" />
	</target>

	<target name="recreate_dmg">
		<!-- Remove created DMG which is wrong -->
		<delete file="${basedir}/target/atunes-${version}.dmg"/>
		
		<!-- Remove xattr com.apple.FinderInfo which causes app bundle to being copied when executing it -->
		<exec executable="xattr">
			<arg value="-d"/>
			<arg value="com.apple.FinderInfo"/>
			<arg value="${basedir}/target/atunes-${version}/aTunes.app"/>
		</exec>
		
		<!-- Create DMG again -->
		<exec executable="${basedir}/build_tools/macos_createdmg.sh">
			<arg value="${basedir}/target/atunes-${version}"/>
			<arg value="aTunes ${version}"/>
			<arg value="${basedir}/target/atunes-${version}_temp.dmg"/>
			<arg value="${basedir}/target/atunes-${version}.dmg"/>
		</exec>		
	</target>

	<!-- Uploads files to Sourceforge -->
	<target name="upload" if="do_upload">
		<echo message="${do_upload}"/>
		<echo message="${user}"/>
		<echo message="Starting upload"/>
		
		<scp todir="${user}:${password}@frs.sourceforge.net:/home/frs/project/a/at/atunes/latest-builds">
		    <fileset dir="${basedir}/target/">
		      <include name="*installer.*"/>
		      <include name="*.dmg"/>
		      <include name="*.deb"/>
		    </fileset>
		  </scp>
		
		<echo message="Finished upload"/>
	</target>

</project>
